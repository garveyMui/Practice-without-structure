//
//  main.c
//  20200404
//
//  Created by 梅佳伟 on 2020/4/4.
//  Copyright © 2020 梅佳伟. All rights reserved.
//
#include<stdio.h>
#include<stdlib.h>
#define N 10002
typedef struct score *PtrToScore;
struct score
{
    int num,total;
    int partialScore[6];
};
struct table
{
    int total;
    int num;
    int user;
    int perfect;
};
void InsertSort(struct table table[],int n)
{
    int i,j,tmp,tmp1,tmp2;
    for(i=2;i<=n;i++)
    {
        tmp=table[i].total;
        tmp1=table[i].num;
        tmp2=table[i].perfect;
        for(j=i;j>1&&tmp>=table[table[j-1].num].total;j--)
        {
            if(tmp>table[table[j-1].num].total)
            {
                table[j].num=table[j-1].num;
            }
            else
            {
                if(tmp2>table[table[j-1].num].perfect)
                {
                    table[j].num=table[j-1].num;
                }
                else
                {
                    break;
                }
            }
        }
        table[j].num=tmp1;
    }
}
int main(int argc,char *argv[])
{
    int n,k,m;
    scanf("%d %d %d",&n,&k,&m);
     int i,j,numTest,partialScore;
    int x[5];
    for(i=0;i<k;i++)
    {
        scanf("%d",&x[i]);
    }
    struct score a[N];
    int user;
    for(i=1;i<=n;i++)
    {
        a[i].num=0;
        a[i].total=0;
        for(j=1;j<=k;j++)
        {
           a[i].partialScore[j]=-2;
        }
    }
    struct table table[N];
    int perfect=0;
    for(i=0;i<m;i++)
    {
        scanf("%d",&user);
        scanf("%d %d",&numTest,&partialScore);
        
        if(a[(int)user].partialScore[numTest]<partialScore)
        {
            a[(int)user].partialScore[numTest]=partialScore;
        }
    }
    int q=1;
    for(i=1;i<=n;i++)
    {
        int flag=-1;
        perfect=0;
        for(j=1;j<=k;j++)
        {
            if(a[i].partialScore[j]>=0)
            {
                flag=1;
                if(a[i].partialScore[j]==x[j-1])
                {
                    perfect++;
                }
                a[i].total+=a[i].partialScore[j];
            }
        }
        if(flag==1)
        {
            table[q].total=a[i].total;
            table[q].user=i;
            table[q].num=q;
            table[q].perfect=perfect;
            q++;
        }
    }
    InsertSort(table,q-1);
    int g=1;
    printf("%d %05d %d",g,table[table[1].num].user,table[table[1].num].total);
    for(j=1;j<=k;j++)
    {
        if(a[table[table[1].num].user].partialScore[j]==-1)
        {
            printf(" 0");
        }
        else if(a[table[table[1].num].user].partialScore[j]==-2)
        {
            printf(" -");
        }
        else
        {
             printf(" %d",a[table[table[1].num].user].partialScore[j]);
        }
    }
    printf("\n");
    for(i=2;i<=q-1;i++)
    {
        if(table[table[i].num].total!=table[table[i-1].num].total)
        {
            g=i;
        }
        printf("%d %05d %d",g,table[table[i].num].user,table[table[i].num].total);
        for(j=1;j<=k;j++)
        {
            if(a[table[table[i].num].user].partialScore[j]==-1)
            {
                printf(" 0");
            }
            else if(a[table[table[i].num].user].partialScore[j]==-2)
            {
                printf(" -");
            }
            else
            {
                 printf(" %d",a[table[table[i].num].user].partialScore[j]);
            }
        }
        printf("\n");
    }
    return 0;
}
