//
//  main.c
//  20200404
//
//  Created by 梅佳伟 on 2020/4/4.
//  Copyright © 2020 梅佳伟. All rights reserved.
//
#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#define N 100000
void Swap(int *a,int *b)
{
    int tmp = *a;
    *a = *b;
    *b = tmp;
}
void PercolateDown(int a[],int p,int n)
{
    int Parent,Child;
    int X;
    X=a[p];
    for(Parent=p;(Parent*2+1)<n;Parent=Child)
    {
        Child=Parent*2+1;
        if(Child!=n-1&&a[Child]<a[Child+1])
        {
            Child++;
        }
        if(X>=a[Child])break;
        else
            a[Parent]=a[Child];
    }
    a[Parent]=X;
}
int HeapSort(int a[],int n,int b[])
{
    int i,j,flag=1;
    for(i=n/2-1;i>=0;i--)
    {
        PercolateDown(a,i,n);
    }
    for(i=n-1;i>0&&flag!=3;i--)
    {
        Swap(&a[0],&a[i]);
        PercolateDown(a, 0, i);
        for(j=0;j<n&&flag!=2;j++)
        {
            if(a[j]!=b[j])
            {
                flag=0;
                break;
            }
        }
        if(flag==1||flag==2)
        {
            flag++;
        }
        else
        {
           flag=1;
        }
    }
    return flag;
}
void InsertionSort(int c[],int n,int b[])
{
    int p,i,j;
    int tmp,flag=1;
    for(p=1;p<n&&flag!=3;p++)
    {
        tmp=c[p];
        for(i=p;i>0&&c[i-1]>tmp;i--)
        {
            c[i]=c[i-1];
        }
        c[i]=tmp;
        for(j=0;j<n&&flag!=2;j++)
        {
            if(c[j]!=b[j])
            {
                flag=0;
                break;
            }
        }
        if(flag==1||flag==2)
        {
            flag++;
        }
        else
        {
           flag=1;
        }
    }
}
int main(int argc,char *argv[])
{
    int n,i,a[N],b[N],c[N];
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
        c[i]=a[i];
    }
    for(i=0;i<n;i++)
    {
        scanf("%d",&b[i]);
    }
    if(HeapSort(a,n,b)==3)
    {
        printf("Heap Sort\n");
        i=0;
        printf("%d",a[i]);
        for(i=1;i<n;i++)
        {
            printf(" %d",a[i]);
        }
    }
    else
    {
        InsertionSort(c,n,b);
        printf("Insertion Sort\n");
        printf("%d",c[0]);
        for(i=1;i<n;i++)
        {
            printf(" %d",c[i]);
        }
    }
    return 0;
}
